-----------------------------------org.opendaylight.cmts.Authorized_envelope.java-----------------------------------

package org.opendaylight.cmts;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
"traffic-priority",
"reserved0",
"reserved1",
"request-transmission-policy",
"maximum-sustained-traffic-rate",
"maximum-traffic-burst",
"maximum-reserved-traffic-rate",
"traffic-rate-packet-size-maximum-concatenated-burst",
"assumed-minimum-reserved",
"required-attribute-mask",
"forbidden-attribute-mask",
"attribute-aggregation-rule-mask"
})
public class Authorized_envelope {

@JsonProperty("traffic-priority")
private int traffic_priority;
@JsonProperty("reserved0")
private int reserved0;
@JsonProperty("reserved1")
private int reserved1;
@JsonProperty("request-transmission-policy")
private int request_transmission_policy;
@JsonProperty("maximum-sustained-traffic-rate")
private int maximum_sustained_traffic_rate;
@JsonProperty("maximum-traffic-burst")
private int maximum_traffic_burst;
@JsonProperty("maximum-reserved-traffic-rate")
private int maximum_reserved_traffic_rate;
@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
private int traffic_rate_packet_size_maximum_concatenated_burst;
@JsonProperty("assumed-minimum-reserved")
private int assumed_minimum_reserved;
@JsonProperty("required-attribute-mask")
private int required_attribute_mask;
@JsonProperty("forbidden-attribute-mask")
private int forbidden_attribute_mask;
@JsonProperty("attribute-aggregation-rule-mask")
private int attribute_aggregation_rule_mask;
private Map<String, Object> additionalProperties = new HashMap<String, Object>();

@JsonProperty("traffic-priority")
public int getTraffic_priority() {
return traffic_priority;
}

@JsonProperty("traffic-priority")
public void setTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
}

public Authorized_envelope withTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
return this;
}

@JsonProperty("reserved0")
public int getReserved0() {
return reserved0;
}

@JsonProperty("reserved0")
public void setReserved0(int reserved0) {
this.reserved0 = reserved0;
}

public Authorized_envelope withReserved0(int reserved0) {
this.reserved0 = reserved0;
return this;
}

@JsonProperty("reserved1")
public int getReserved1() {
return reserved1;
}

@JsonProperty("reserved1")
public void setReserved1(int reserved1) {
this.reserved1 = reserved1;
}

public Authorized_envelope withReserved1(int reserved1) {
this.reserved1 = reserved1;
return this;
}

@JsonProperty("request-transmission-policy")
public int getRequest_transmission_policy() {
return request_transmission_policy;
}

@JsonProperty("request-transmission-policy")
public void setRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
}

public Authorized_envelope withRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
return this;
}

@JsonProperty("maximum-sustained-traffic-rate")
public int getMaximum_sustained_traffic_rate() {
return maximum_sustained_traffic_rate;
}

@JsonProperty("maximum-sustained-traffic-rate")
public void setMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
}

public Authorized_envelope withMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
return this;
}

@JsonProperty("maximum-traffic-burst")
public int getMaximum_traffic_burst() {
return maximum_traffic_burst;
}

@JsonProperty("maximum-traffic-burst")
public void setMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
}

public Authorized_envelope withMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
return this;
}

@JsonProperty("maximum-reserved-traffic-rate")
public int getMaximum_reserved_traffic_rate() {
return maximum_reserved_traffic_rate;
}

@JsonProperty("maximum-reserved-traffic-rate")
public void setMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
}

public Authorized_envelope withMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
return this;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public int getTraffic_rate_packet_size_maximum_concatenated_burst() {
return traffic_rate_packet_size_maximum_concatenated_burst;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public void setTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
}

public Authorized_envelope withTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
return this;
}

@JsonProperty("assumed-minimum-reserved")
public int getAssumed_minimum_reserved() {
return assumed_minimum_reserved;
}

@JsonProperty("assumed-minimum-reserved")
public void setAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
}

public Authorized_envelope withAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
return this;
}

@JsonProperty("required-attribute-mask")
public int getRequired_attribute_mask() {
return required_attribute_mask;
}

@JsonProperty("required-attribute-mask")
public void setRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
}

public Authorized_envelope withRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
return this;
}

@JsonProperty("forbidden-attribute-mask")
public int getForbidden_attribute_mask() {
return forbidden_attribute_mask;
}

@JsonProperty("forbidden-attribute-mask")
public void setForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
}

public Authorized_envelope withForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
return this;
}

@JsonProperty("attribute-aggregation-rule-mask")
public int getAttribute_aggregation_rule_mask() {
return attribute_aggregation_rule_mask;
}

@JsonProperty("attribute-aggregation-rule-mask")
public void setAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
}

public Authorized_envelope withAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
return this;
}

@Override
public String toString() {
return ToStringBuilder.reflectionToString(this);
}

@Override
public int hashCode() {
return HashCodeBuilder.reflectionHashCode(this);
}

@Override
public boolean equals(Object other) {
return EqualsBuilder.reflectionEquals(this, other);
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperties(String name, Object value) {
this.additionalProperties.put(name, value);
}

}
-----------------------------------org.opendaylight.cmts.Besteffort.java-----------------------------------

package org.opendaylight.cmts;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
"subscriber",
"trafficProfile"
})
public class Besteffort {

@JsonProperty("subscriber")
private String subscriber;
@JsonProperty("trafficProfile")
private TrafficProfile trafficProfile;
private Map<String, Object> additionalProperties = new HashMap<String, Object>();

@JsonProperty("subscriber")
public String getSubscriber() {
return subscriber;
}

@JsonProperty("subscriber")
public void setSubscriber(String subscriber) {
this.subscriber = subscriber;
}

public Besteffort withSubscriber(String subscriber) {
this.subscriber = subscriber;
return this;
}

@JsonProperty("trafficProfile")
public TrafficProfile getTrafficProfile() {
return trafficProfile;
}

@JsonProperty("trafficProfile")
public void setTrafficProfile(TrafficProfile trafficProfile) {
this.trafficProfile = trafficProfile;
}

public Besteffort withTrafficProfile(TrafficProfile trafficProfile) {
this.trafficProfile = trafficProfile;
return this;
}

@Override
public String toString() {
return ToStringBuilder.reflectionToString(this);
}

@Override
public int hashCode() {
return HashCodeBuilder.reflectionHashCode(this);
}

@Override
public boolean equals(Object other) {
return EqualsBuilder.reflectionEquals(this, other);
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperties(String name, Object value) {
this.additionalProperties.put(name, value);
}

}
-----------------------------------org.opendaylight.cmts.Committed_envelope.java-----------------------------------

package org.opendaylight.cmts;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
"traffic-priority",
"reserved0",
"reserved1",
"request-transmission-policy",
"maximum-sustained-traffic-rate",
"maximum-traffic-burst",
"maximum-reserved-traffic-rate",
"traffic-rate-packet-size-maximum-concatenated-burst",
"assumed-minimum-reserved",
"required-attribute-mask",
"forbidden-attribute-mask",
"attribute-aggregation-rule-mask"
})
public class Committed_envelope {

@JsonProperty("traffic-priority")
private int traffic_priority;
@JsonProperty("reserved0")
private int reserved0;
@JsonProperty("reserved1")
private int reserved1;
@JsonProperty("request-transmission-policy")
private int request_transmission_policy;
@JsonProperty("maximum-sustained-traffic-rate")
private int maximum_sustained_traffic_rate;
@JsonProperty("maximum-traffic-burst")
private int maximum_traffic_burst;
@JsonProperty("maximum-reserved-traffic-rate")
private int maximum_reserved_traffic_rate;
@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
private int traffic_rate_packet_size_maximum_concatenated_burst;
@JsonProperty("assumed-minimum-reserved")
private int assumed_minimum_reserved;
@JsonProperty("required-attribute-mask")
private int required_attribute_mask;
@JsonProperty("forbidden-attribute-mask")
private int forbidden_attribute_mask;
@JsonProperty("attribute-aggregation-rule-mask")
private int attribute_aggregation_rule_mask;
private Map<String, Object> additionalProperties = new HashMap<String, Object>();

@JsonProperty("traffic-priority")
public int getTraffic_priority() {
return traffic_priority;
}

@JsonProperty("traffic-priority")
public void setTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
}

public Committed_envelope withTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
return this;
}

@JsonProperty("reserved0")
public int getReserved0() {
return reserved0;
}

@JsonProperty("reserved0")
public void setReserved0(int reserved0) {
this.reserved0 = reserved0;
}

public Committed_envelope withReserved0(int reserved0) {
this.reserved0 = reserved0;
return this;
}

@JsonProperty("reserved1")
public int getReserved1() {
return reserved1;
}

@JsonProperty("reserved1")
public void setReserved1(int reserved1) {
this.reserved1 = reserved1;
}

public Committed_envelope withReserved1(int reserved1) {
this.reserved1 = reserved1;
return this;
}

@JsonProperty("request-transmission-policy")
public int getRequest_transmission_policy() {
return request_transmission_policy;
}

@JsonProperty("request-transmission-policy")
public void setRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
}

public Committed_envelope withRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
return this;
}

@JsonProperty("maximum-sustained-traffic-rate")
public int getMaximum_sustained_traffic_rate() {
return maximum_sustained_traffic_rate;
}

@JsonProperty("maximum-sustained-traffic-rate")
public void setMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
}

public Committed_envelope withMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
return this;
}

@JsonProperty("maximum-traffic-burst")
public int getMaximum_traffic_burst() {
return maximum_traffic_burst;
}

@JsonProperty("maximum-traffic-burst")
public void setMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
}

public Committed_envelope withMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
return this;
}

@JsonProperty("maximum-reserved-traffic-rate")
public int getMaximum_reserved_traffic_rate() {
return maximum_reserved_traffic_rate;
}

@JsonProperty("maximum-reserved-traffic-rate")
public void setMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
}

public Committed_envelope withMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
return this;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public int getTraffic_rate_packet_size_maximum_concatenated_burst() {
return traffic_rate_packet_size_maximum_concatenated_burst;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public void setTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
}

public Committed_envelope withTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
return this;
}

@JsonProperty("assumed-minimum-reserved")
public int getAssumed_minimum_reserved() {
return assumed_minimum_reserved;
}

@JsonProperty("assumed-minimum-reserved")
public void setAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
}

public Committed_envelope withAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
return this;
}

@JsonProperty("required-attribute-mask")
public int getRequired_attribute_mask() {
return required_attribute_mask;
}

@JsonProperty("required-attribute-mask")
public void setRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
}

public Committed_envelope withRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
return this;
}

@JsonProperty("forbidden-attribute-mask")
public int getForbidden_attribute_mask() {
return forbidden_attribute_mask;
}

@JsonProperty("forbidden-attribute-mask")
public void setForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
}

public Committed_envelope withForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
return this;
}

@JsonProperty("attribute-aggregation-rule-mask")
public int getAttribute_aggregation_rule_mask() {
return attribute_aggregation_rule_mask;
}

@JsonProperty("attribute-aggregation-rule-mask")
public void setAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
}

public Committed_envelope withAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
return this;
}

@Override
public String toString() {
return ToStringBuilder.reflectionToString(this);
}

@Override
public int hashCode() {
return HashCodeBuilder.reflectionHashCode(this);
}

@Override
public boolean equals(Object other) {
return EqualsBuilder.reflectionEquals(this, other);
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperties(String name, Object value) {
this.additionalProperties.put(name, value);
}

}
-----------------------------------org.opendaylight.cmts.Reserved_envelope.java-----------------------------------

package org.opendaylight.cmts;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
"traffic-priority",
"reserved0",
"reserved1",
"request-transmission-policy",
"maximum-sustained-traffic-rate",
"maximum-traffic-burst",
"maximum-reserved-traffic-rate",
"traffic-rate-packet-size-maximum-concatenated-burst",
"assumed-minimum-reserved",
"required-attribute-mask",
"forbidden-attribute-mask",
"attribute-aggregation-rule-mask"
})
public class Reserved_envelope {

@JsonProperty("traffic-priority")
private int traffic_priority;
@JsonProperty("reserved0")
private int reserved0;
@JsonProperty("reserved1")
private int reserved1;
@JsonProperty("request-transmission-policy")
private int request_transmission_policy;
@JsonProperty("maximum-sustained-traffic-rate")
private int maximum_sustained_traffic_rate;
@JsonProperty("maximum-traffic-burst")
private int maximum_traffic_burst;
@JsonProperty("maximum-reserved-traffic-rate")
private int maximum_reserved_traffic_rate;
@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
private int traffic_rate_packet_size_maximum_concatenated_burst;
@JsonProperty("assumed-minimum-reserved")
private int assumed_minimum_reserved;
@JsonProperty("required-attribute-mask")
private int required_attribute_mask;
@JsonProperty("forbidden-attribute-mask")
private int forbidden_attribute_mask;
@JsonProperty("attribute-aggregation-rule-mask")
private int attribute_aggregation_rule_mask;
private Map<String, Object> additionalProperties = new HashMap<String, Object>();

@JsonProperty("traffic-priority")
public int getTraffic_priority() {
return traffic_priority;
}

@JsonProperty("traffic-priority")
public void setTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
}

public Reserved_envelope withTraffic_priority(int traffic_priority) {
this.traffic_priority = traffic_priority;
return this;
}

@JsonProperty("reserved0")
public int getReserved0() {
return reserved0;
}

@JsonProperty("reserved0")
public void setReserved0(int reserved0) {
this.reserved0 = reserved0;
}

public Reserved_envelope withReserved0(int reserved0) {
this.reserved0 = reserved0;
return this;
}

@JsonProperty("reserved1")
public int getReserved1() {
return reserved1;
}

@JsonProperty("reserved1")
public void setReserved1(int reserved1) {
this.reserved1 = reserved1;
}

public Reserved_envelope withReserved1(int reserved1) {
this.reserved1 = reserved1;
return this;
}

@JsonProperty("request-transmission-policy")
public int getRequest_transmission_policy() {
return request_transmission_policy;
}

@JsonProperty("request-transmission-policy")
public void setRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
}

public Reserved_envelope withRequest_transmission_policy(int request_transmission_policy) {
this.request_transmission_policy = request_transmission_policy;
return this;
}

@JsonProperty("maximum-sustained-traffic-rate")
public int getMaximum_sustained_traffic_rate() {
return maximum_sustained_traffic_rate;
}

@JsonProperty("maximum-sustained-traffic-rate")
public void setMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
}

public Reserved_envelope withMaximum_sustained_traffic_rate(int maximum_sustained_traffic_rate) {
this.maximum_sustained_traffic_rate = maximum_sustained_traffic_rate;
return this;
}

@JsonProperty("maximum-traffic-burst")
public int getMaximum_traffic_burst() {
return maximum_traffic_burst;
}

@JsonProperty("maximum-traffic-burst")
public void setMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
}

public Reserved_envelope withMaximum_traffic_burst(int maximum_traffic_burst) {
this.maximum_traffic_burst = maximum_traffic_burst;
return this;
}

@JsonProperty("maximum-reserved-traffic-rate")
public int getMaximum_reserved_traffic_rate() {
return maximum_reserved_traffic_rate;
}

@JsonProperty("maximum-reserved-traffic-rate")
public void setMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
}

public Reserved_envelope withMaximum_reserved_traffic_rate(int maximum_reserved_traffic_rate) {
this.maximum_reserved_traffic_rate = maximum_reserved_traffic_rate;
return this;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public int getTraffic_rate_packet_size_maximum_concatenated_burst() {
return traffic_rate_packet_size_maximum_concatenated_burst;
}

@JsonProperty("traffic-rate-packet-size-maximum-concatenated-burst")
public void setTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
}

public Reserved_envelope withTraffic_rate_packet_size_maximum_concatenated_burst(int traffic_rate_packet_size_maximum_concatenated_burst) {
this.traffic_rate_packet_size_maximum_concatenated_burst = traffic_rate_packet_size_maximum_concatenated_burst;
return this;
}

@JsonProperty("assumed-minimum-reserved")
public int getAssumed_minimum_reserved() {
return assumed_minimum_reserved;
}

@JsonProperty("assumed-minimum-reserved")
public void setAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
}

public Reserved_envelope withAssumed_minimum_reserved(int assumed_minimum_reserved) {
this.assumed_minimum_reserved = assumed_minimum_reserved;
return this;
}

@JsonProperty("required-attribute-mask")
public int getRequired_attribute_mask() {
return required_attribute_mask;
}

@JsonProperty("required-attribute-mask")
public void setRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
}

public Reserved_envelope withRequired_attribute_mask(int required_attribute_mask) {
this.required_attribute_mask = required_attribute_mask;
return this;
}

@JsonProperty("forbidden-attribute-mask")
public int getForbidden_attribute_mask() {
return forbidden_attribute_mask;
}

@JsonProperty("forbidden-attribute-mask")
public void setForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
}

public Reserved_envelope withForbidden_attribute_mask(int forbidden_attribute_mask) {
this.forbidden_attribute_mask = forbidden_attribute_mask;
return this;
}

@JsonProperty("attribute-aggregation-rule-mask")
public int getAttribute_aggregation_rule_mask() {
return attribute_aggregation_rule_mask;
}

@JsonProperty("attribute-aggregation-rule-mask")
public void setAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
}

public Reserved_envelope withAttribute_aggregation_rule_mask(int attribute_aggregation_rule_mask) {
this.attribute_aggregation_rule_mask = attribute_aggregation_rule_mask;
return this;
}

@Override
public String toString() {
return ToStringBuilder.reflectionToString(this);
}

@Override
public int hashCode() {
return HashCodeBuilder.reflectionHashCode(this);
}

@Override
public boolean equals(Object other) {
return EqualsBuilder.reflectionEquals(this, other);
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperties(String name, Object value) {
this.additionalProperties.put(name, value);
}

}
-----------------------------------org.opendaylight.cmts.TrafficProfile.java-----------------------------------

package org.opendaylight.cmts;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
"type",
"authorized-envelope",
"reserved-envelope",
"committed-envelope"
})
public class TrafficProfile {

@JsonProperty("type")
private String type;
@JsonProperty("authorized-envelope")
private Authorized_envelope authorized_envelope;
@JsonProperty("reserved-envelope")
private Reserved_envelope reserved_envelope;
@JsonProperty("committed-envelope")
private Committed_envelope committed_envelope;
private Map<String, Object> additionalProperties = new HashMap<String, Object>();

@JsonProperty("type")
public String getType() {
return type;
}

@JsonProperty("type")
public void setType(String type) {
this.type = type;
}

public TrafficProfile withType(String type) {
this.type = type;
return this;
}

@JsonProperty("authorized-envelope")
public Authorized_envelope getAuthorized_envelope() {
return authorized_envelope;
}

@JsonProperty("authorized-envelope")
public void setAuthorized_envelope(Authorized_envelope authorized_envelope) {
this.authorized_envelope = authorized_envelope;
}

public TrafficProfile withAuthorized_envelope(Authorized_envelope authorized_envelope) {
this.authorized_envelope = authorized_envelope;
return this;
}

@JsonProperty("reserved-envelope")
public Reserved_envelope getReserved_envelope() {
return reserved_envelope;
}

@JsonProperty("reserved-envelope")
public void setReserved_envelope(Reserved_envelope reserved_envelope) {
this.reserved_envelope = reserved_envelope;
}

public TrafficProfile withReserved_envelope(Reserved_envelope reserved_envelope) {
this.reserved_envelope = reserved_envelope;
return this;
}

@JsonProperty("committed-envelope")
public Committed_envelope getCommitted_envelope() {
return committed_envelope;
}

@JsonProperty("committed-envelope")
public void setCommitted_envelope(Committed_envelope committed_envelope) {
this.committed_envelope = committed_envelope;
}

public TrafficProfile withCommitted_envelope(Committed_envelope committed_envelope) {
this.committed_envelope = committed_envelope;
return this;
}

@Override
public String toString() {
return ToStringBuilder.reflectionToString(this);
}

@Override
public int hashCode() {
return HashCodeBuilder.reflectionHashCode(this);
}

@Override
public boolean equals(Object other) {
return EqualsBuilder.reflectionEquals(this, other);
}

@JsonAnyGetter
public Map<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperties(String name, Object value) {
this.additionalProperties.put(name, value);
}

}




